{"version":3,"sources":["components/Navbar.js","components/Map.js","components/Stats.js","components/Table.js","components/Subscribe.js","components/Survey.js","components/Info.js","App.js","index.js"],"names":["Example","props","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","countries","registerLocale","require","handleClick","e","countryCode","console","log","Map","stats","this","mapData","forEach","item","key","getAlpha2Code","country","undefined","infected","map","backgroundColor","zoomOnScroll","containerStyle","width","height","onRegionClick","containerClassName","regionStyle","initial","fill","stroke","hover","cursor","series","regions","values","scale","normalizeFunction","React","Component","Stats","Table","uuid","scope","dead","continent","Subscribe","email","setEmail","setCountry","Form","Container","Row","Col","xs","sm","Input","type","placeholder","onChange","target","value","bsSize","Button","Survey","FormGroup","Label","for","name","id","check","Info","App","state","tableData","tableLoading","statsData","statsLoading","fetchData","bind","fetch","then","response","json","data","setState","catch","error","exact","path","to","loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccbdce83.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n} from 'reactstrap';\r\nimport './Navbar.scss';\r\n\r\nconst Example = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <Navbar color=\"dark\" dark expand=\"md\">\r\n            <NavbarBrand href=\"/\">Corona Times</NavbarBrand>\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n                <Nav className=\"mr-auto\" navbar>\r\n                    <NavItem>\r\n                        <NavLink href=\"/stats\">Statistics</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"/info/\">Information</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"/form/\">Survey</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"https://github.com/julian-hecker/corona-times\">Code</NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Example;\r\n","import React from 'react';\r\nimport './Map.scss';\r\nimport { VectorMap } from 'react-jvectormap';\r\nimport countries from 'i18n-iso-countries';\r\ncountries.registerLocale(require('i18n-iso-countries/langs/en.json'));\r\n\r\nconst handleClick = (e, countryCode) => {\r\n    console.log(countryCode);\r\n};\r\n\r\n\r\nclass Map extends React.Component {\r\n\r\n    render() {\r\n\r\n        const stats = this.props.stats;\r\n        let mapData = {};\r\n\r\n        \r\n        if (stats) {\r\n            stats.forEach(item => {\r\n                let key = countries.getAlpha2Code(item.country, 'en');\r\n                if (!key) {\r\n                    // Sometimes countries don't get coded?\r\n                    switch (item.country) {\r\n                        case 'United States':\r\n                            key = 'US';\r\n                            break;\r\n                        case 'Vietnam':\r\n                            key = 'VN';\r\n                            break;\r\n                        case 'Russia':\r\n                            key = 'RU';\r\n                            break;\r\n                        default:\r\n                            key = undefined;\r\n                    }\r\n                }\r\n                mapData[key] = item.infected;\r\n            });\r\n\r\n\r\n            return (\r\n                <div className='map'>\r\n                <VectorMap\r\n                    map={'world_mill'}\r\n                    backgroundColor='#341541'\r\n                    zoomOnScroll={false}\r\n                    containerStyle={{\r\n                        width: '100%',\r\n                        height: '50vh'\r\n                    }}\r\n                    onRegionClick={handleClick} //gets the country code\r\n                    containerClassName='map-container'\r\n                    regionStyle={{\r\n                        initial: {\r\n                            fill: '#7d9',\r\n                            'fill-opacity': 0.9,\r\n                            stroke: 'none',\r\n                            'stroke-width': 0,\r\n                            'stroke-opacity': 0\r\n                        },\r\n                        hover: {\r\n                            'fill-opacity': 0.8,\r\n                            cursor: 'pointer'\r\n                        },\r\n                    }}\r\n                    series={{\r\n                        regions: [\r\n                            {\r\n                                values: mapData, //this is your data\r\n                                scale: ['#aaaa00', '#ff0000'], //your color game's here\r\n                                normalizeFunction: 'polynomial'\r\n                            }\r\n                        ]\r\n                    }}\r\n                    />\r\n                </div>\r\n            );\r\n        } else { return null; }\r\n    }\r\n};\r\nexport default Map;\r\n","import React from \"react\";\r\nimport \"./Stats.scss\";\r\n\r\n\r\nclass Stats extends React.Component {\r\n    render() {\r\n        const stats = this.props.stats[0];\r\n        if (stats) {\r\n            return (\r\n                <div className=\"Stats-wrapper\">\r\n                    <div className=\"box\">\r\n                        <h1>{stats['infected']}</h1>\r\n                        <h5>Total Infected</h5>\r\n                    </div>\r\n                    <div className=\"box\">\r\n                        <h1>{stats['dead']}</h1>\r\n                        <h5>Total Dead</h5>\r\n                    </div>\r\n                    <div className=\"box\">\r\n                        <h1>{stats['cured']}</h1>\r\n                        <h5>Total Cured</h5>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else { return null; }\r\n    }\r\n};\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport './Table.scss';\r\nimport uuid from 'uuid/v4'\r\n\r\nclass Example extends React.Component {\r\n    render() {\r\n        const stats = this.props.stats;\r\n        if (stats) {\r\n\r\n            return (\r\n                <div className=\"table-wrapper\">\r\n                    <Table dark>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Country</th>\r\n                                <th>Infected</th>\r\n                                <th>Deaded</th>\r\n                                <th>Continent</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {stats.map(item => {\r\n                                return <tr key={uuid()}>\r\n                                    <th scope=\"row\">{item.country}</th>\r\n                                    <td>{item.infected}</td>\r\n                                    <td>{item.dead}</td>\r\n                                    <td>{item.continent}</td>\r\n                                </tr>\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else { return null; }\r\n    }\r\n}\r\n\r\nexport default Example;\r\n","import \"./Subscribe.scss\";\r\nimport { Button } from \"reactstrap\";\r\nimport React, { useEffect, useState, useReducer } from \"react\";\r\n\r\nimport {\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\n\r\n\r\nconst Subscribe = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [country, setCountry] = useState(\"\");\r\n\r\n\r\n\r\n    return (\r\n        <Form className=\"subscribe-wrap\">\r\n            <h2>Subscribe for Updates!</h2>\r\n            <Container>\r\n                <Row>\r\n                    <Col xs=\"12\" sm=\"6\">\r\n                        <Input\r\n                            className=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Email Address\"\r\n                            email=\"email\"\r\n                            onChange={e => setEmail(e.target.value)}\r\n                            value={email}\r\n                        />\r\n                    </Col>\r\n                    <Col xs=\"12\" sm=\"6\">\r\n                        <Input\r\n                            className=\"input\"\r\n                            type=\"select\"\r\n                            bsSize=\"md\"\r\n                            onClick={e => setCountry(e.target.value)}\r\n                        >\r\n                            <option>North America</option>\r\n                            <option>South America</option>\r\n                            <option>Europe</option>\r\n                            <option>Africa</option>\r\n                            <option>Asia</option>\r\n                            <option>Australia/Oceania</option>\r\n                        </Input>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs=\"12\">\r\n                        <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-warning\">\r\n                            Get Notified!\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Form >\r\n    );\r\n};\r\n\r\nexport default Subscribe;\r\n","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input\r\n} from 'reactstrap';\r\nimport './Survey.scss';\r\n\r\n\r\nclass Survey extends React.Component {\r\n    render() {\r\n        return (\r\n            <Form className=\"survey\">\r\n                <FormGroup>\r\n                    <Label for=\"exampleSelect\">Have you or anyone in which you have been in close proximity with travelled internationally in the last two months? </Label>\r\n                    <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n                        <option>No</option>\r\n                        <option>Yes</option>\r\n                    </Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"exampleSelect\">Are you experincing any symptoms? </Label>\r\n                    <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n                        <option>No</option>\r\n                        <option>Yes</option>\r\n                    </Input>\r\n                </FormGroup>\r\n\r\n                <FormGroup>Please select all regions you've been to recently.\r\n                    <Label check>\r\n                        <Input type=\"checkbox\" />{' '}Africa</Label>\r\n                    <Label check>\r\n                        <Input type=\"checkbox\" />{' '}Asia</Label>\r\n                    <Label check>\r\n                        <Input type=\"checkbox\" />{' '}The Caribbean</Label>\r\n                    <Label check>\r\n                        <Input type=\"checkbox\" />{' '}Europe</Label>\r\n                    <Label check>\r\n                        <Input type=\"checkbox\" />{' '}North America</Label>\r\n                    <Label check>\r\n                        <Input type=\"checkbox\" />{' '}South America</Label>\r\n                    <Label check>\r\n                        <Input type=\"checkbox\" />{' '}Oceania</Label>\r\n                </FormGroup>\r\n                <Button \r\n                    className=\"btn btn-warning\"\r\n                    type=\"submit\"\r\n                >Submit</Button>\r\n\r\n            </Form>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Survey;\r\n","import React from 'react';\r\nimport './Info.scss';\r\n\r\nfunction Info() {\r\n\r\n    return (\r\n        <article>\r\n            <p><em>If for whatever reason you feel you may be experiencing any kind of emergency.  Please contact your nearest emergency services.</em></p>\r\n            <h2>Coronavirus Symptoms:</h2>\r\n            <p>Coronaviruses (CoV) are a large family of viruses that cause illness ranging from the common cold to more severe diseases such as <a href=\"https://www.who.int/emergencies/mers-cov/en/\">Middle East Respiratory Syndrome (MERS-CoV)</a> and <a href=\"https://www.who.int/csr/sars/en/\">Severe Acute Respiratory Syndrome (SARS-CoV). A novel coronavirus (nCoV)</a> is a new strain that has not been previously identified in humans.</p>\r\n            <p>Coronaviruses are zoonotic, meaning they are transmitted between animals and people.  Detailed investigations found that SARS-CoV was transmitted from civet cats to humans and MERS-CoV from dromedary camels to humans. Several known coronaviruses are circulating in animals that have not yet infected humans.</p>\r\n            <p>Common signs of infection include respiratory symptoms, fever, cough, shortness of breath and breathing difficulties. In more severe cases, infection can cause pneumonia, severe acute respiratory syndrome, kidney failure and even death.</p>\r\n            <p>Standard recommendations to prevent infection spread include regular hand washing, covering mouth and nose when coughing and sneezing, thoroughly cooking meat and eggs. Avoid close contact with anyone showing symptoms of respiratory illness such as coughing and sneezing.</p>\r\n            <p>(Source: <a href=\"https://www.who.int/health-topics/coronavirus\">WHO.IT</a> -World Health Organization)</p>\r\n            <h2>About us</h2>\r\n            Thanks for checking out our website.  We appreciate your time at, and we had fun at this year’s CEWIT Hackathon!\r\n            -Ian Matlak, Julian Hecker, Philip Guerrero\r\n        </article>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Info;","// import React, { useState, useReducer } from \"react\";\r\nimport React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar.js\";\r\nimport Map from \"./components/Map.js\";\r\nimport Stats from \"./components/Stats.js\";\r\nimport Table from \"./components/Table.js\";\r\nimport Subscribe from \"./components/Subscribe.js\";\r\nimport Survey from \"./components/Survey.js\";\r\nimport Info from \"./components/Info.js\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableData: [],\r\n            tableLoading: true,\r\n            statsData: [],\r\n            statsLoading: true\r\n        };\r\n        this.fetchData = this.fetchData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    fetchData() {\r\n        fetch('http://www.ianmatlak.com:8443/corona/api/table.php')\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                this.setState({\r\n                    tableData: data['data'],\r\n                    tableLoading: false\r\n                });\r\n                // console.log(data['data']);\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        fetch('http://www.ianmatlak.com:8443/corona/api/stat.php')\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            this.setState({\r\n                statsData: data['data'],\r\n                statsLoading: false\r\n            });\r\n            // console.log(data['data']);\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        const { tableData, tableLoading, statsData, statsLoading } = this.state;\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <Router>\r\n                    <Navbar />\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Redirect to=\"/stats\" />\r\n                        </Route>\r\n                        <Route path=\"/stats\">\r\n                            <Map \r\n                                stats={tableData} \r\n                                loading={tableLoading}    \r\n                            />\r\n                            <Stats \r\n                                stats={statsData} \r\n                                loading={statsLoading}    \r\n                            />\r\n                            <Table \r\n                                stats={tableData} \r\n                                loading={tableLoading}    \r\n                            />\r\n                            <Subscribe />\r\n                        </Route>\r\n                        <Route path=\"/info\">\r\n                            <Info/>\r\n                        </Route>\r\n                        <Route path=\"/form\">\r\n                            <Survey />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}