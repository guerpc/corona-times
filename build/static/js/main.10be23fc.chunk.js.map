{"version":3,"sources":["components/Table.js","components/Navbar.js","components/Subscribe.js","components/Stats.js","components/chinaCoords.js","components/Map.js","App.js","index.js"],"names":["xhrResult","Example","props","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","Subscribe","email","setEmail","country","setCountry","useEffect","console","log","Form","Container","Row","Col","xs","sm","Input","type","placeholder","onChange","e","target","value","bsSize","Button","xhr","XMLHttpRequest","open","onload","responseText","send","Table","scope","chinaPath","lat","lng","mapStyles","width","height","MapContainer","state","path","google","this","zoom","style","initialCenter","strokeColor","fillColor","React","Component","GoogleWrapper","GoogleApiWrapper","apiKey","Stats","App","Map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10be23fc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport './Table.scss';\r\n\r\nlet xhrResult;\r\nconst xhr = new XMLHttpRequest();\r\nxhr.open('GET', 'http://www.ianmatlak.com:8443/corona/api/table.php');\r\nxhr.onload = function () {\r\n    xhrResult = xhr.responseText;\r\n    console.log(xhrResult);\r\n}\r\nxhr.send();\r\n\r\n\r\nconst Example = (props) => {\r\n    return (\r\n        <div className=\"table-wrapper\">\r\n            <Table dark>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Country</th>\r\n                        <th>Infected</th>\r\n                        <th>Deaded</th>\r\n                        <th>Continent</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th scope=\"row\">China</th>\r\n                        <td>123456</td>\r\n                        <td>6543</td>\r\n                        <td>Asia</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">Japan</th>\r\n                        <td>33</td>\r\n                        <td>0</td>\r\n                        <td>Asia</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">US</th>\r\n                        <td>13</td>\r\n                        <td>0</td>\r\n                        <td>North America</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Example;\r\n","import React, { useState } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n} from 'reactstrap';\r\nimport './Navbar.scss';\r\n\r\nconst Example = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <Navbar color=\"dark\" dark expand=\"md\">\r\n            <NavbarBrand href=\"/\">Corona Times</NavbarBrand>\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n                <Nav className=\"mr-auto\" navbar>\r\n                    <NavItem>\r\n                        <NavLink href=\"/stats\">Statistics</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"/info/\">Information</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"/form/\">Survey</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"https://github.com/julian-hecker/corona-times\">Code</NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Example;\r\n","import \"./Subscribe.scss\";\r\nimport { Button } from \"reactstrap\";\r\nimport React, { useEffect, useState, useReducer } from \"react\";\r\n\r\nimport {\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n//import axios from \"axios\";\r\n\r\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\nconst dburl = \"http://www.ianmatlak.com:8443/country.php\";\r\n\r\n// const is required\r\n// this is destructoring handleInput\r\nconst Subscribe = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [country, setCountry] = useState(\"\");\r\n\r\n    // This is to only show console log text\r\n    useEffect(() => {\r\n        console.log(`${email} - ${country}`);\r\n    }, [email, country]);\r\n\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    // // No 'Access-Control-Allow-Origin' header is present on the requested ERROR\r\n    // const countryList = () => {\r\n    //   axios(proxyurl + dburl)\r\n    //     .then(({ data }) => {\r\n    //       let countrylist1 = data;\r\n    //       console.log(countrylist1);\r\n    //     })\r\n    //     .catch(() =>\r\n    //       console.log(\"Canâ€™t access \" + dburl + \" response. Blocked by browser?\")\r\n    //     );\r\n    // };\r\n\r\n    return (\r\n        <Form className=\"subscribe-wrap\">\r\n            <h2>Subscribe for Updates!</h2>\r\n            <Container>\r\n                <Row>\r\n                    <Col xs=\"12\" sm=\"6\">\r\n                        <Input\r\n                            className=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Email Address\"\r\n                            email=\"email\"\r\n                            onChange={e => setEmail(e.target.value)}\r\n                            value={email}\r\n                        />\r\n                    </Col>\r\n                    <Col xs=\"12\" sm=\"6\">\r\n                        <Input\r\n                            className=\"input\"\r\n                            type=\"select\"\r\n                            bsSize=\"md\"\r\n                            onClick={e => setCountry(e.target.value)}\r\n                        >\r\n                            <option>North America</option>\r\n                            <option>South America</option>\r\n                            <option>Europe</option>\r\n                            <option>Africa</option>\r\n                            <option>Asia</option>\r\n                            <option>Australia/Oceania</option>\r\n                        </Input>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs=\"12\">\r\n                        <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-warning\">\r\n                            Get Notified!\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Form >\r\n    );\r\n};\r\n\r\nexport default Subscribe;\r\n","import React from \"react\";\r\nimport \"./Stats.scss\";\r\n\r\n\r\nlet xhrResult;\r\nconst xhr = new XMLHttpRequest();\r\nxhr.open('GET', 'http://www.ianmatlak.com:8443/corona/api/stat.php');\r\nxhr.onload = function () {\r\n    xhrResult = xhr.responseText;\r\n    console.log(xhrResult);\r\n}\r\nxhr.send();\r\n\r\n\r\nconst Stats = props => {\r\n    return (\r\n        <div className=\"Stats-wrapper\">\r\n            <div className=\"box\">\r\n                <h1>67,901</h1>\r\n                <h5>Total Infected</h5>\r\n            </div>\r\n            <div className=\"box\">\r\n                <h1>1308</h1>\r\n                <h5>Total Dead</h5>\r\n            </div>\r\n            <div className=\"box\">\r\n                <h1>4182</h1>\r\n                <h5>Total Cured</h5>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Stats;\r\n","// get paths by hand\r\n// https://www.latlong.net/\r\n\r\nconst chinaPath = [\r\n    { lat: 39, lng: 74 },\r\n    { lat: 49, lng: 87 },\r\n    { lat: 45, lng: 90 },\r\n    { lat: 43, lng: 96 },\r\n    { lat: 42, lng: 105 },\r\n    { lat: 44, lng: 112 },\r\n    { lat: 46, lng: 120 },\r\n    { lat: 53, lng: 122 },\r\n    { lat: 48, lng: 134 },\r\n    { lat: 37, lng: 122 },\r\n    { lat: 25, lng: 120 },\r\n    { lat: 20, lng: 109 },\r\n    { lat: 22, lng: 101 },\r\n    { lat: 28, lng: 97 },\r\n    { lat: 28, lng: 86 },\r\n    { lat: 32, lng: 78 },\r\n    { lat: 35, lng: 76 },\r\n];\r\n\r\nexport default chinaPath;","import React from 'react';\r\nimport { Map, GoogleApiWrapper, Polygon } from 'google-maps-react';\r\nimport chinaPath from './chinaCoords.js';\r\n// https://www.digitalocean.com/community/tutorials/how-to-integrate-the-google-maps-api-into-react-applications\r\n// https://console.developers.google.com/apis/credentials?project=cewit-corona\r\n\r\nconst mapStyles = {\r\n    width: '100%',\r\n    height: '400px',\r\n};\r\n\r\n\r\nclass MapContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            path: chinaPath,\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Map \r\n                google={this.props.google}\r\n                zoom={2}\r\n                style={mapStyles}\r\n                initialCenter={{\r\n                    lat: 35,\r\n                    lng: 120\r\n                }}\r\n            >\r\n                <Polygon \r\n                    path={this.state.path}\r\n                    strokeColor={\"#ff0000\"}\r\n                    fillColor={\"#ff0000\"}\r\n                />\r\n            </Map>\r\n        );\r\n    }\r\n}\r\n\r\nconst GoogleWrapper = GoogleApiWrapper({\r\n    // apiKey: process.env.REACT_APP_GOOGLE_KEY\r\n    apiKey: 'AIzaSyClXTYb5GEEE_9qnO62s1fO6Gyh-BWTSpY'\r\n})(MapContainer);\r\n\r\nexport default GoogleWrapper;\r\n","// import React, { useState, useReducer } from \"react\";\r\nimport React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar.js\";\r\nimport Subscribe from \"./components/Subscribe.js\";\r\nimport Table from \"./components/Table.js\";\r\nimport Map from \"./components/Map.js\";\r\nimport Stats from \"./components/Stats.js\";\r\nimport Survey from \"./components/Survey.js\";\r\nimport Info from \"./components/Info.js\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            {/* <Router>\r\n                <Navbar />\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Redirect to=\"/stats\" />\r\n                    </Route>\r\n                    <Route path=\"/stats\">\r\n                        <div style={{height:\"400px\"}}>\r\n                            <Map />\r\n                        </div>\r\n                        <Stats />\r\n                        <Table />\r\n                        <Subscribe />\r\n                    </Route>\r\n                    <Route path=\"/info\">\r\n                        <Info/>\r\n                    </Route>\r\n                    <Route path=\"/form\">\r\n                        <Survey />\r\n                    </Route>\r\n                </Switch>\r\n            </Router> */}\r\n            <Navbar />\r\n            <div style={{height:\"400px\"}}>\r\n                <Map />\r\n            </div>\r\n            <Stats />\r\n            <Table />\r\n            <Subscribe />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}